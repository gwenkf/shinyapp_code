data("iris")
iris = data("iris")
head(iris)
data("iris")
data("iris")
head(iris)
iris[order.Sepal.Length, ]
sort(iris$Sepal.Length, ascending=TRUE)
sort(iris$Sepal.Length, decreasing = FALSE)
order(iris, Sepal.Length)
order(iris, iris$Sepal.Length)
order(iris$Sepal.Length)
iris = iris[order(Sepal.Length), ]
iris[order(Sepal.Length),]
iris[order(iris$Sepal.Length),]
apply(iris, -Species, sd)
test = iris %>% select(-Species) %>% summarise(sd)
test = sapply(iris[: ,Sepal.Length:Petal.Width], sd)
iris[:, "Sepal.Length":"Petal.Width"]
iris[ , "Sepal.Length":"Petal.Width"]
iris %>% select(-Species)
test = sapply(iris[,1:4], sd)
test
test1 = lapply(iris[,1:4], sd)
test1
sum(iris[1,])
sum(iris[,1:4])
data(births)
data(birth)
data(diamond)
data(diamonds)
library(dplyr)
data(births)
data(birth)
library(ggplot2)
data(births)
data("diamonds")
data(diamonds)
print(diamonds_bar) # make a plot, do not touch this line
diamonds_best = diamonds %>% filter(color=='D'&clarity=='F')# fill your code here
# 2. average price/gram in different quality
diamonds_price = diamonds_best %>% group_by(carat) %>% summarise(avg_price = mean(price))# fill your code here
# 3. bar plot
diamonds_bar = ggplot(data=diamonds_price, aes(x=carat, y=avg_price)) + geom_col()# fill your code here
print(diamonds_bar) # make a plot, do not touch this line
diamonds_price
head(diamonds_price)
diamonds_best
head(diamonds_best)
head(diamonsd)
head(diamonds)
diamonds_best = diamonds %>% filter(color=='D' & clarity=='F')# fill your code here
diamonds_best
diamonds_best = diamonds %>% filter(color=='D' & clarity=='IF')# fill your code here
diamonds_best
diamonds_price = diamonds_best %>% group_by(carat) %>% summarise(avg_price = mean(price))# fill your code here
diamonds_price
diamonds_bar = ggplot(data=diamonds_price, aes(x=carat, y=avg_price)) + geom_col()# fill your code here
diamonds_bar
x = rnorm(10000)# fill your code here
y = sample(x, 100, replace=FALSE)# fill your code here
z = mean(x) - mean(y) # fill your code here
z
x
y
1+1
library(dplyr)
cd
cwd
getwd
m_1 = matrix(1:6,2,3)
m_1
m_2 = matrix(3:18,4,3)
m_2 = matrix(7:18, 4, 3)
m_2
cbind(m_1,m_2)
data(iris)
data(cars)
head(cars)
cars[1:5,]
nrows(cars)
cars.nrow
nrow(cars)
rnorm(50)
getcwd
getcd
cwd
getwd
library(readr)
timesq = read_csv(TimesSquareSignage.csv, colnames=TRUE)
timesq = read_csv(TimesSquareSignage.csv, col_names = TRUE)
timesq = read_csv(~/ThisPC/Downloads/RPart_1Homework/RPart1_Homework/TimesSquareSignage.csv, col_names = TRUE)
timesq = read_csv(~ThisPC/Downloads/RPart_1Homework/RPart1_Homework/TimesSquareSignage.csv, col_names = TRUE)
timesq = read_csv("~ThisPC/Downloads/RPart_1Homework/RPart1_Homework/TimesSquareSignage.csv", col_names = TRUE)
timesq = "read_csv(/Users/gfern/Desktop/TimesSquareSignage.csv", col_names = TRUE)
timesq = read_csv("/Users/gfern/Desktop/TimesSquareSignage.csv", col_names = TRUE)
nrows(timesq)
nrow(timesq)
ncol(timesq)
lapply(timesq, class)
anyNA(timesq)
sum(is.na(timesq))
is.na(times)
is.na(timesq)
?which
which(is.na(timesq), arr.ind=TRUE)
as.array(which(is.na(timesq), useNames =TRUE))
as.array(which(is.na(timesq)))
which(is.na(timesq),useNames =TRUE)
which(is.na(timesq))
which(is.na(timesq),arr.ind=TRUE,useNames=TRUE)
lapply(X = timesq, FUN = which(is.na(timesq),arr.ind = TRUE))
lapply(timesq,is.na())
is.na(timesq)
head(timesq)
view(timesq)
View(timesq)
class(timesq$Location)
levels(timesq$Location)
obs_upperbroadway = timesq[timesq$Location == "Upper Broadway", :]
obs_upperbroadway = timesq[timesq$Location == "Upper Broadway",]
obs_upperbroadway
head(obs_upperbroadway)
class(timesq)
library("grDevices", lib.loc="C:/Program Files/R/R-3.4.1/library")
head(obs_upperbroadway)
obs_sqfeet = timesq[timesq$Sq > mean(timesq$Sq),]
obs_sqfeet = timesq[timesq$_SF > mean(timesq$_SF),]
obs_sqfeet = timesq[timesq$SF > mean(timesq$SF),]
obs_sqfeet
obs_toploc = timesq[timesq$SF > mean(timesq$SF),c("Screen Name (LED + Vinyl Signs","Building Address", "Location")]
obs_toploc = timesq[timesq$SF > mean(timesq$SF),c("Screen Name (LED + Vinyl Signs)","Building Address", "Location")]
obs_toploc
seq(c("NY","CT","CA"),50)
rep(c("NY","CT","CA"),50)
sample(x=c("NY","CT","CA"),size=50,replace=TRUE)
state = sample(x=c("NY","CT","CA"),size=50,replace=TRUE)
data(cars)
cbind(cars,state)
add_ratio = cbind(add_state,ratio=add_state$speed/add_state$dist)
add_state = cbind(cars,state)
add_ratio = cbind(add_state,ratio=add_state$speed/add_state$dist)
add_ratio
mean(add_ratio$ratio)
sd(add_ratio$ratio)
bmi_formula = weights/heights
weights = c(87,58,65,100)
heights = c(180,165,160,193)
bmi_formula = weights/heights
BMI = apply(weights,bmi_formula)
BMI = apply(X = weights,FUN = bmi_formula)
cbind(heights,weights)
BMI = height_weight$weights / height_weight$heights
height_weight = cbind(heights,weights)
BMI = height_weight$weights / height_weight$heights
class(height_weight)
height_weight = as.data.frame(heights,weights)
height_weight = cbind(heights,weights)
tbl_bminfo = as.data.frame(height_weight)
BMI = height_weight$weights / height_weight$heights
BMI = tbl_bminfo$weights / tbl_bminfo$heights
BMI
class(BMI)
A = ((5000)((1 + ((.115/100)^15))))
A = ((5000)(1 + ((.115/100)^15))))
A = ((5000)(1 + ((.115/100)^15)))
A = ((5000)*(1 + ((.115/100)^15)))
a
A
A = ((5000)*(1 + ((11.5/100)^15)))
heights = c(180,165,160,193)
A
A = ((5000)*((1 + (11.5/100))^15))
A
weights/heights
nchar(fruit)
fruit = 'apple orange grape banana'
nchar(fruit)
strsplit(fruit, split=" ")
fruitvec = strsplit(fruit, split=" ")[[1]]
fruitvec
paste(fruitvec, c('A','B'))
paste(fruitvec, c('A','B'), sep="::")
paste(fruitvec, collapse=",")
paste(fruitvec, c('A','B'), sep=':', collapse="@")
n = 1:8
paste0('x',n)
xvar = paste0('x',n)
right = paste(xvar, collapse " + ")
right = paste(xvar, collapse=" + ")
right
form= paste('y ~', right)
form
substr(fruit, 6, 10)
substr(fruitvec, 1, 3)
gsub('apple','strawberry',fruit)
grep('grape',fruitvec)
grep('tan',fruitvec)
grep('banana',fruitvec)
grep('a', fruitvec)
test_string = "R is great! I love data!"
substr(test_string,6,10)
strsplit(fruit, split=" ")
test_string_vec = strsplit(fruit, split=" ")
grep("love", test_string_vec)
gsub("great", "wonderful", test_string)
test_string_vec = strsplit(test_string, split=" ")
grep("love", test_string_vec)
test_string_vec = unlist(strsplit(test_string, split=" "))
grep("love", test_string_vec)
vec2 - factor(rep(c('b','a'),c(4,6)))
vec2 = factor(rep(c('b','a'),c(4,6)))
vec2
ordered(vec2,levels=c('b','a'))
vec2
cat(num, 'is odd')
num = 5
if (num %% 2 != 0) {
cat(num, 'is odd')
}
cat(num, 'is even')
if (num %% 2 != 0) {
cat(num, 'is odd')
} else if (num == 0) {
cat(num, 'is also even')
} else {
cat(num, 'is even')
}
ifelse(num %% 2 == 0, 'even','odd')
age = sample(0:100, 20, replace=TRUE)
age
res
res = ifelse(age > 70, 'old', ifelse(age <= 30, 'young','middle'))
res
set.seed(1)
age = sample(0:100, 20, replace=TRUE)
age
res = ifelse(age > 70, 'old', ifelse(age <= 30, 'young','middle'))
res
inc = 4600
ifelse(inc < 5000, "10%", ifelse(inc > 500, "20%"))
grade = c(75,93,88,80,99,75,76,92)
switch(grade, A = grade[grade>90], B = grade[grade >80&grade<89], C=grade[grade>70&grade<79])
switch(grade, A = grade[grade>90], B = grade[grade >80|grade<89], C=grade[grade>70|grade<79])
ifelse(inc < 5000, inc*.1, inc*.2)
inc = 12,300
ifelse(inc < 5000, inc*.1, inc*.2)
inc = 12300
ifelse(inc < 5000, inc*.1, inc*.2)
switch(choice, 'A' = grade[grade>=90], 'B' = grade[grade >=80&grade<90], 'C' =grade[grade>=70|grade<80])
choice="A"
switch(choice, 'A' = grade[grade>=90], 'B' = grade[grade >=80&grade<90], 'C' =grade[grade>=70|grade<80])
switch(choice, 'A' = grade[grade>=90], 'B' = grade[grade >=80&grade<90], 'C' =grade[grade>=70&grade<80])
switch(choice, 'A' = grade[grade>=90], 'B' = grade[grade >=80&grade<90], 'C' = grade[grade>=70&grade<80])
nums = 1:100
for (n in nums) {
sum(n**2)
}
sum(i**2)
for (nums[i] in nums) {
sum(n**2)
} i = i + 1
i = i + 1
sum(nums[i]**2)
sum(v[i]**2)
i = i + 1
n = 1:150
while (n[i] < 100) {
sum(n[i]**2)
i = i + 1
}
shiny::runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/mortality_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/mortality_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/mortality_app')
shiny::runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
shiny::runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
shiny::runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
shiny::runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
rsconnect::deployApp('/Users/gfern/git_proj/shinyapp_code/shinyapp_code/shiny_app')
rsconnect::deployApp('/Users/gfern/git_proj/shinyapp_code/shinyapp_code/shiny_app/app.R')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
shiny::runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
test = RaceAge %>% group_by(Race, Age_grps) %>% summarise(rate = sum(as.numeric(Deaths))/sum(as.numeric(Population)))
setwd("/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app/data/")
RaceAge = read.csv("STdrugalcdeath_raceage1599.csv", stringsAsFactors = FALSE, header = FALSE, col.names = c("State","State_code","Year","Year_code", "Race","Age_grps","Age_grpsCode","DrugAlc_induced_causes","DrugAlc_induced_code","Deaths","Population","Crude_rate","Rate_LowerConfInt","Rate_UpperConfInt","Rate_StErr"))
RaceAge = RaceAge[-c(1),]
RaceAge$Year = as.factor(RaceAge$Year)
RaceAge = RaceAge[Race != "Not Stated"&Race != "Not Hispanic or Latino", , ]
RaceAge = as.data.table(RaceAge)
RaceAge = RaceAge[Race != "Not Stated"&Race != "Not Hispanic or Latino", , ]
test = RaceAge %>% group_by(Race, Age_grps) %>% summarise(rate = sum(as.numeric(Deaths))/sum(as.numeric(Population)))
test
test = RaceAge
test
test = RaceAge[RaceAge$Deaths > 9,]
test
test[test$Deaths == 7,
]
test[test$Deaths == 7,]
RaceAge[RaceAge$Deaths < 9,]
class(RaceAge$Deaths)
RaceAge[RaceAge$Deaths < '9',]
RaceAge[RaceAge$Deaths == '9',]
RaceAge[RaceAge$Deaths == '8',]
RaceAge[RaceAge$Deaths == '12',]
RaceAge[RaceAge$Deaths == '7',]
RaceAge[RaceAge$Deaths == '6',]
RaceAge[RaceAge$Deaths == '5',]
RaceAge[RaceAge$Deaths == '4',]
RaceAge[RaceAge$Deaths == '3',]
RaceAge[RaceAge$Deaths == '2',]
RaceAge[RaceAge$Deaths == '1',]
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
runApp('C:/Users/gfern/git_proj/test/shinyapp_code/shinyapp_code/shiny_app')
